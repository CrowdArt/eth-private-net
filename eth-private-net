#!/bin/bash

IDENTITIES=(alice bob lily)
FLAGS='--networkid=8888 --preload=identities.js'
DEV_FLAGS='--nodiscover --verbosity=4'

BASE_PORT=40300
BASE_RPC_PORT=8100
CMD=$1

function exec_on_node() {
  geth --exec="$2" attach ./$1/geth.ipc
}

case $CMD in
  init)
    for IDENTITY in ${IDENTITIES[@]}; do
      echo "Initializing genesis block for $IDENTITY"
      geth --datadir=./$IDENTITY $FLAGS init genesis.json
    done
    ;;

  clean)
    for IDENTITY in ${IDENTITIES[@]}; do
      echo "Cleaning geth/ directory from $IDENTITY"
      rm -r ./$IDENTITY/geth
    done
    ;;

  start)
    IDENTITY=$2
    if [ -z $IDENTITY ]
    then
      echo "No identity specified. Identity must be one of: ${IDENTITIES[*]}"
      exit -1
    fi

    case $IDENTITY in
      alice)
        OFFSET=1
        ;;

      bob)
        OFFSET=2
        ;;

      bob)
        OFFSET=3
        ;;
    esac

    PORT=$((BASE_PORT + OFFSET))
    RPC_PORT=$((BASE_RPC_PORT + OFFSET))

    echo "Starting node for $IDENTITY on port: $PORT, RPC port: $RPC_PORT. Console logs sent to ./$IDENTITY/console.log"
    geth --datadir=./$IDENTITY --port=$PORT --rpcport=$RPC_PORT $FLAGS $DEV_FLAGS console 2>> ./$IDENTITY/console.log
    ;;

  connect)
    IDENTITY1=$2
    IDENTITY2=$3

    ENODE=$(exec_on_node $IDENTITY1 'admin.nodeInfo.enode')
    CONNECT_JS="admin.addPeer($ENODE)"

    exec_on_node $IDENTITY2 $CONNECT_JS
    ;;
esac
